(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{198:function(a,n,s){"use strict";s.r(n);var e=s(0),p=Object(e.a)({},function(){var a=this.$createElement,n=this._self._c||a;return n("div",{staticClass:"content"},[this._ssrNode('<h1 id="config-reference"><a href="#config-reference" aria-hidden="true" class="header-anchor">#</a> Config Reference</h1><p><strong>Valine</strong> Supports two different initialization methods:</p><div class="language-html extra-class"><pre class="language-html"><code><span class="token comment">&lt;!-- Write the argument in the constructor --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript">\n    <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        el<span class="token punctuation">:</span><span class="token string">\'#vcomment\'</span><span class="token punctuation">,</span>\n        appId<span class="token punctuation">:</span><span class="token string">\'your appid\'</span><span class="token punctuation">,</span>\n        appKey<span class="token punctuation">:</span><span class="token string">\'your appkey\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- or Call the init method --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript">\n    <span class="token keyword">var</span> valine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    valine<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        el<span class="token punctuation">:</span><span class="token string">\'#vcomment\'</span><span class="token punctuation">,</span>\n        appId<span class="token punctuation">:</span><span class="token string">\'your appid\'</span><span class="token punctuation">,</span>\n        appKey<span class="token punctuation">:</span><span class="token string">\'your appkey\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="el"><a href="#el" aria-hidden="true" class="header-anchor">#</a> el</h2><ul><li>Type:<code>String</code></li><li>Default:<code>undefined</code></li><li>Required:<code>true</code></li></ul><p>The DOM element to be mounted on initialization. It can be a CSS selector string or an actual HTMLElement.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    el<span class="token punctuation">:</span><span class="token string">\'#vcomment\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; Please ensure that the element is unique.</p><h2 id="appid"><a href="#appid" aria-hidden="true" class="header-anchor">#</a> appId</h2><ul><li>Type:<code>String</code></li><li>Default:<code>null</code></li><li>Required:<code>true</code></li></ul><p>Application <code>appId</code> from <code>Leancloud</code>.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    appId<span class="token punctuation">:</span><span class="token string">\'your leancloud appid\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="appkey"><a href="#appkey" aria-hidden="true" class="header-anchor">#</a> appKey</h2><ul><li>Type:<code>String</code></li><li>Default:<code>null</code></li><li>Required:<code>true</code></li></ul><p>Application <code>appKey</code> from <code>Leancloud</code>.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    appKey<span class="token punctuation">:</span><span class="token string">\'your leancloud appkey\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="region"><a href="#region" aria-hidden="true" class="header-anchor">#</a> region</h2><ul><li>Type:<code>String</code></li><li>Default:<code>cn</code></li><li>Required:<code>false</code></li></ul><p>Storage node，Optional value：</p><ul><li><code>cn</code> - Chinese mainland node</li><li><code>us</code> - Overseas node</li></ul><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    region<span class="token punctuation">:</span><span class="token string">\'cn\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; <code>v1.1.9-beta4</code> is supported</p><h2 id="placeholder"><a href="#placeholder" aria-hidden="true" class="header-anchor">#</a> placeholder</h2><ul><li>Type:<code>String</code></li><li>Default:<code>null</code></li><li>Required:<code>false</code></li></ul><p>Comment box placeholders.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    placeholder<span class="token punctuation">:</span><span class="token string">\'Just so so\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="notify"><a href="#notify" aria-hidden="true" class="header-anchor">#</a> notify</h2><ul><li>Type:<code>Boolean</code></li><li>Default:<code>false</code></li><li>Required:<code>false</code></li></ul>'),this._ssrNode("<p>","</p>",[this._ssrNode("Mail notifier, Please refer to the "),this._ssrNode('<a href="https://github.com/xCss/Valine/wiki/Valine-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92%E8%AE%BE%E7%BD%AE" target="_blank" rel="noopener noreferrer">',"</a>",[this._ssrNode("configuration"),n("OutboundLink")],2),this._ssrNode(".")],2),this._ssrNode('<div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    notify<span class="token punctuation">:</span><span class="token boolean">false</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="verify"><a href="#verify" aria-hidden="true" class="header-anchor">#</a> verify</h2><ul><li>Type:<code>Boolean</code></li><li>Default:<code>false</code></li><li>Required:<code>false</code></li></ul><p>Validation code.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    verify<span class="token punctuation">:</span><span class="token boolean">false</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="path"><a href="#path" aria-hidden="true" class="header-anchor">#</a> path</h2><ul><li>Type:<code>String</code></li><li>Default:<code>window.location.pathname</code></li><li>Required:<code>false</code></li></ul><p>Article path(just like duoshuo <code>thread</code>), Optional value:</p><ul><li><code>window.location.pathname</code> (recommend)</li><li><code>window.location.href</code></li><li>customize (Please ensure uniqueness)</li></ul><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    path<span class="token punctuation">:</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; <code>v1.1.5+</code> is supported</p><h2 id="avatar"><a href="#avatar" aria-hidden="true" class="header-anchor">#</a> avatar</h2><ul><li>Type:<code>String</code></li><li>Default:<code>mm</code></li><li>Required:<code>false</code></li></ul><p><code>Gravatar</code> type, Optional value:</p><ul><li><code>mm</code></li><li><code>identicon</code></li><li><code>monsterid</code></li><li><code>wavatar</code></li><li><code>retro</code></li><li><code>\'\'</code>(Empty string)</li></ul><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    avatar<span class="token punctuation">:</span><span class="token template-string"><span class="token string">`mm`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; <code>v1.1.7+</code> is supported</p><h2 id="guest-info"><a href="#guest-info" aria-hidden="true" class="header-anchor">#</a> guest_info</h2><ul><li>Type:<code>Array</code></li><li>Default:<code>[\'nick\',\'mail\',\'link\']</code></li><li>Required:<code>false</code></li></ul><p>Reviewer attributes.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    guest_info<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">\'nick\'</span><span class="token punctuation">]</span> <span class="token comment">// Just want nickname</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; <code>v1.1.8-beta+</code> is supported</p><h2 id="pagesize"><a href="#pagesize" aria-hidden="true" class="header-anchor">#</a> pageSize</h2><ul><li>Type:<code>Number</code></li><li>Default:<code>10</code></li><li>Required:<code>false</code></li></ul><p>Number of pages per page.</p><div class="language-js extra-class"><pre class="language-js"><code><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pageSize<span class="token punctuation">:</span><span class="token number">10</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>!&gt; <code>v1.1.8-beta2+</code> is supported</p>')],2)},[],!1,null,null,"0fba4c7c");n.default=p.exports}}]);